# =======================================
# BANCO DE DADOS
# =======================================
# Driver assíncrono (necessário para Alembic/env.py e SQLAlchemy async)
DATABASE_URL=postgresql+asyncpg://postgres:SUA_SENHA@postgres.railway.internal:5432/railway

# Compatibilidade com libs síncronas (db.py ainda pode usar se precisar)
POSTGRES_URL=postgresql://postgres:SUA_SENHA@postgres.railway.internal:5432/railway

# Pool de conexões
DB_POOL_SIZE=50
DB_MAX_OVERFLOW=150


# =======================================
# BOT TELEGRAM
# =======================================
# Token do bot (BotFather)
BOT_TOKEN=COLOQUE_SEU_TOKEN_AQUI

# ID do canal VIP (sempre com -100 no início)
VIP_CHANNEL=-1001234567890


# =======================================
# REDIS (Streams + DLQ + ZSETs)
# =======================================
REDIS_URL=redis://default:SUA_SENHA@redis.railway.internal:6379/0

# Streams principais
REDIS_STREAM=buyers_stream
REDIS_GROUP=buyers_group
DLQ_STREAM=buyers_dlq
DELAYED_ZSET=buyers_delayed
REDIS_CONSUMER_PREFIX=worker


# =======================================
# SEGURANÇA / CRIPTOGRAFIA
# =======================================
# Gere novos valores para produção
# python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
SECRET_KEY=SUA_CHAVE_SECRETA
CRYPTO_KEY=OUTRA_CHAVE_SECRETA


# =======================================
# PIXELS / RASTREAMENTO
# =======================================
# IDs de pixels separados por vírgula
NEW_PIXEL_IDS=1234567890,9876543210
RETRO_BATCH_SIZE=500


# =======================================
# TYPEBOT (API Autenticada)
# =======================================
TYPEBOT_API_URL=https://typebot.io/api/v1
TYPEBOT_API_KEY=SUA_CHAVE_TYPEBOT
TYPEBOT_BOT_ID=cme1m04840001l4047xnv9lfn


# =======================================
# ADMIN SERVICE
# =======================================
# Token de autenticação para endpoints /admin
ADMIN_TOKEN=SUA_CHAVE_ADMIN